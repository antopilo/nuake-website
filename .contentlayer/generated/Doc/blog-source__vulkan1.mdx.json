{
  "title": "Vulkan Port Update 1",
  "description": "How to port an OpenGL game engine to Vulkan",
  "date": "Sunday, January 24, 2025",
  "published": true,
  "author": "antopilo",
  "img": "https://cdn.antopilo.dev/blogPreviews/vulkan-port-banner.png",
  "body": {
    "raw": "\r\n# Mental aspect\r\n\r\nI‚Äôve been thinking about this port for a few years and every time I thought about it, I started having cold sweats over the amount of work it would entail. When I say work, I don‚Äôt just mean the programming, but also the mental effort. Seeing a project you‚Äôve worked on for five years reduced from a full-fledged editor to a blank screen is daunting. The fear of the unknown, not knowing if your architecture is compatible or even if you have the capacity of completing that work. So I waited and let the idea simmer until I felt unfazed by the idea and just accepted that it needed to be done. That‚Äôs when you know you are ready.\r\n\r\n# Being ready\r\n\r\nEvery time I publish a new blog post, I feel good and proud. In a way, these updates are like finishing a sprint; they represent a development cycle for me. It gives me a moment to rest and recharge before diving back into the work.\r\n\r\nThe last update was the biggest so far, and I even left many things out of the article because it was simply too big. I figured it was a nice time to release it as the holidays were coming up and I needed some time to recharge my batteries a little bit. I spent time with my family, focused on myself and made sure I started the year right.\r\n\r\nI felt refreshed and I started reading up Vulkan. I was mentally ready to port the biggest codebase I had.\r\n\r\n# Renovation\r\n\r\nA good analogy for this type of work is renovation. If you think of your codebase as a house, the structure of the building represents your game engine, while the renderer is like the interior design and aesthetics. Then it becomes pretty straightforward to see what‚Äôs ahead of you.\r\n\r\nOpenGL and Vulkan have very little in common, so I decided not to support both at the same time. It was going to be a complete departure from OpenGL\r\n\r\n## The Teardown\r\n\r\nThe first step in renovating your kitchen is to strip everything down to the bare structure‚Äîuntil all that‚Äôs left is the structure.\r\n\r\nSimilarly, the first step in this port was to remove all the existing rendering code. Every piece of code that relied on OpenGL had to be commented out or removed entirely. I had GL calls in many places I shouldn‚Äôt have and this was eye opening. It made me realize that this was a much needed change. OpenGL calls were spread out everywhere.\r\n\r\nIt was also a good trip down memory lane, revisiting code I hadn‚Äôt touched in years. All in all, it took around an evening to get to a headless version of Nuake. This process also confirmed that a headless Nuake is possible, which will be useful for dedicated servers down the line.\r\n\r\nAt this point, the kitchen is fully stripped down. The engine is loading up, and all we have is a command line terminal. This is the scariest point. All your work is‚Ä¶. gone. But if you change your mindset a little, you see the potential of your new renovated kitchen! Blank slate, baby! üíÉ\r\n\r\n## Planification\r\n\r\nThe planning was done beforehand and I knew generally what I wanted to use for the renderer. Admittedly, my knowledge of Vulkan at the time was very minimal. I was starting from scratch except for some resources, libraries & previous failed attempts.\r\n\r\nHere is what I decided on using:\r\n\r\n* VkGuide 2.0 (great guide)\r\n* VMA for memory allocation\r\n* VkBootstrap for context initialization\r\n* DXC for HLSL support\r\n* Volk for loading Vulkan function pointers\r\n\r\nAs stated previously, there was also a lot of mental preparation before hand. It‚Äôs important to take you your take to really learn what you are doing rather than fall in the copy-paste trap. This is a mistake that a lot of beginners do when getting into graphics programming and they miss out on important knowledge that will eventually catch up to them.\r\n\r\nIt‚Äôs also important to have a real purpose of understanding the process. If you are too focused on getting to the finish line, you will not get there. You have to be present mentally at every step of the way. Don‚Äôt expect to run if you can‚Äôt walk!\r\n\r\n## Preparation\r\n\r\nNow that everything was in place, it was time to lay down the foundation for the renderer. This means setting up everything we needed to get started on the renderer.\r\n\r\n* Creating the window\r\n* Creating the swap chain\r\n* Our first pipeline\r\n* Clear color\r\n* Rendering imgui\r\n* Displaying the imgui demo window\r\n* Displaying our editor\r\n* Fixing textures & fonts\r\n* Rendering our first triangle to a texture\r\n* Displaying that texture in the viewport panel\r\n\r\n## Execution\r\n\r\nThis next section is an abridged version of the actual process, skipping over some bugs and head scratching. It will also most probably give the impression that everything went very smooth(It certainly wasn‚Äôt!).\r\nThis process was largely learning how to use the validation layer, understanding new concepts I wasn‚Äôt familiar and most importantly producing some god awful code.\r\n\r\nBut that‚Äôs perfectly okay, you have to be easy on yourself when learning new concepts. You can‚Äôt expect to write perfect code and understanding everything right away.\r\n\r\nMy mantra has always been to get it working first, then refined afterwards. Every time I‚Äôve tried abstracting something while implementing it, I end up missing something I didn‚Äôt account for and have to do even more work to account for that edge case.\r\n\r\n### The Editor\r\n\r\nThe first step was setting up the window context, replacing everything previously done with OpenGL with a Vulkan context, and setting up the swap chain. While this wasn‚Äôt something particularly difficult,  it was something I hadn‚Äôt done before, as the swap chain was handled for me. Nonetheless, I got from nothing to a window with a clear color pretty smoothly.\r\n\r\n![Blank window](https://cdn.antopilo.dev/images/vulkan1/window.png)\r\n\r\nThen I had to get my feet feet with the pipeline system. The easiest one to set up is a compute pipeline as it only has one stage and has less boilerplate code. This was a great way to get introduced to those new concepts as it allows you to render to a texture a lot faster.\r\n\r\n![](https://cdn.antopilo.dev/images/vulkan1/compute.png \"Compute shader\")\r\nSetting up ImGUI\r\n\r\nAfter setting up ImGui to use the vulkan back-end instead of the OpenGL one, I followed VkGuide and was able to render the ImGui demo window. This might not seem like a lot, but now technically all I had to do was draw my editor in that same ‚Äúentry point‚Äù.\r\n\r\nIt was almost that simple, but remember what I said earlier? I had OpenGL code spread out throughout my ImGui code. Mainly for rendering thumbnails and previews. So I commented these out and behold:\r\n\r\n![Broken launcher](https://cdn.antopilo.dev/images/vulkan1/launcher.png)\r\nOkay, now let‚Äôs try loading a project just for fun.\r\n\r\n![](https://cdn.antopilo.dev/images/vulkan1/broken-editor.png)\r\n\r\nWhew, there‚Äôs a lot going wrong here, but nonetheless, this was a huuuuge step forward.\r\nEver wondered what Nuake looks like without the pretty make-up? Well here it is. No docking, no custom font, no images, no custom title bar, just plain, raw imgui. At that point, I felt a little bit more confident to port this thing.\r\n\r\nThe reason the font atlas is plastered all over the screen is because when imgui receives an invalid descriptor set to draw an image(equivalent of texture ID with OpenGL) it will render the first texture it has, which is the font atlas.\r\n\r\n### Fixing things up\r\n\r\nThe first thing I did was figuring out how to make a descriptor set for ImGui. After that, all I had to do was use my compute shader‚Äôs color attachment and display it in the viewport, rather than copying it directly to the swap chain. Oh and also fixing the docking. With little work, this is what the editor looked like.\r\n\r\n![](https://cdn.antopilo.dev/images/vulkan1/editor-viewport.png)\r\n\r\nAgain, a huge step forward! We are finally starting to look like a proper editor and not some kind of migraine simulator.\r\n\r\n### Hello Triangle\r\n\r\nI was getting a little impatient there and decided it was time to draw my first triangle and learn about the graphics pipeline. At that point, I had almost no abstraction over Vulkan and it was all raw code. It was still manageable, but I could feel the codebase getting messier and messier. Nonetheless, I didn't trust myself enough to start abstracting. After all, I hadn‚Äôt even rendered a single triangle yet.\r\n\r\n![](https://cdn.antopilo.dev/images/vulkan1/triangle.png)\r\n\r\nNow that I had a vertex buffer, a vertex shader, and a fragment shader. I went ahead and decided to make a new VkMesh class that would replace my original OpenGL Mesh object. The Mesh class was used in a lot of places in the game engine. So instead of just replacing it, I took a composition approach and adding a VkMesh in the Meshclass. This isn't ideal, but it‚Äôs a temporary solution. I‚Äôll refactor it later to use a resource handle.\r\n\r\nWith almost no changes to the codebase, I was able to load all the meshes in a scene and render them to my render target. I also added a buffer to store the camera's view/projection matrix. For now, everything is rendered at the world origin.\r\n\r\n![](https://cdn.antopilo.dev/images/vulkan1/editor3d.png)\r\n\r\nAt this point, it had only been around three days since I started the port, and this was a huge confidence boost. I knew I could do it. With a bit more work, I created a buffer to hold my model matrices. By using a push constant index, I could look up the correct transform in that buffer directly from my vertex shader.\r\n![](https://cdn.antopilo.dev/images/vulkan1/transforms.png)\r\n\r\nLittle did I know, this was my first introduction to the bindless methodology‚Äîbind once, then index into the buffer. This approach significantly reduces the amount of binding required and makes dealing with descriptors much easier.\r\n\r\n### Title bar, icons & images\r\n\r\nI wanted the sexy editor back, so I focused on the finishing touches like custom fonts, icons, and images. I also enabled the custom title bar at the same time.\r\n\r\n![](https://cdn.antopilo.dev/images/vulkan1/fixed-editor.png)\r\n\r\nThis felt really good. The editor was in a healthy state, and I had a render target. Now, it was time to dive into the real work: the scene renderer.\r\n\r\n# Closing words\r\n\r\nThe goal of these updates isn't to show you how to build a renderer‚Äîmine is far from the best or a perfect example. I simply enjoy making cool stuff, and I'm working on this project in my free time.\r\nMy goal is more to give you an insight of what‚Äôs the process of porting a five-year-old codebase, with hundreds of thousands (maybe a million a this point) of lines of code, from OpenGL to Vulkan.\r\n\r\nI remember trying to read about other people's experiences with this task, but very few shared it on a personal level‚Äîmost were focused on the higher level, technical side. The mental aspect of programming is crucial, especially when it comes to long-term projects. Don‚Äôt forget: it‚Äôs a marathon, not a sprint!\r\n\r\n# On the menu next update\r\n\r\nI learned from the last update and won't be making a massive blog post covering everything. As it gets harder and harder to keep up with. I will end this blog post here as Part 1. The next update will dive into the progress I've made on the scene renderer (more than expected!) and will go much deeper. I will be talking about bindless, render pass abstraction, shading, and of course architecture.\r\n\r\nSee you in the next update!\r\n\r\nAntoine",
    "code": "var Component=(()=>{var un=Object.create;var j=Object.defineProperty;var dn=Object.getOwnPropertyDescriptor;var bn=Object.getOwnPropertyNames;var cn=Object.getPrototypeOf,fn=Object.prototype.hasOwnProperty;var z=(d,n)=>()=>(n||d((n={exports:{}}).exports,n),n.exports),mn=(d,n)=>{for(var p in n)j(d,p,{get:n[p],enumerable:!0})},ye=(d,n,p,w)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let v of bn(n))!fn.call(d,v)&&v!==p&&j(d,v,{get:()=>n[v],enumerable:!(w=dn(n,v))||w.enumerable});return d};var hn=(d,n,p)=>(p=d!=null?un(cn(d)):{},ye(n||!d||!d.__esModule?j(p,\"default\",{value:d,enumerable:!0}):p,d)),pn=d=>ye(j({},\"__esModule\",{value:!0}),d);var xe=z((Nn,Ne)=>{Ne.exports=React});var ke=z(q=>{\"use strict\";(function(){\"use strict\";var d=xe(),n=Symbol.for(\"react.element\"),p=Symbol.for(\"react.portal\"),w=Symbol.for(\"react.fragment\"),v=Symbol.for(\"react.strict_mode\"),H=Symbol.for(\"react.profiler\"),X=Symbol.for(\"react.provider\"),K=Symbol.for(\"react.context\"),I=Symbol.for(\"react.forward_ref\"),A=Symbol.for(\"react.suspense\"),L=Symbol.for(\"react.suspense_list\"),E=Symbol.for(\"react.memo\"),F=Symbol.for(\"react.lazy\"),Ee=Symbol.for(\"react.offscreen\"),J=Symbol.iterator,Te=\"@@iterator\";function Re(e){if(e===null||typeof e!=\"object\")return null;var a=J&&e[J]||e[Te];return typeof a==\"function\"?a:null}var N=d.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function f(e){{for(var a=arguments.length,r=new Array(a>1?a-1:0),i=1;i<a;i++)r[i-1]=arguments[i];Oe(\"error\",e,r)}}function Oe(e,a,r){{var i=N.ReactDebugCurrentFrame,s=i.getStackAddendum();s!==\"\"&&(a+=\"%s\",r=r.concat([s]));var u=r.map(function(l){return String(l)});u.unshift(\"Warning: \"+a),Function.prototype.apply.call(console[e],console,u)}}var Se=!1,Pe=!1,je=!1,Ae=!1,Le=!1,Z;Z=Symbol.for(\"react.module.reference\");function Fe(e){return!!(typeof e==\"string\"||typeof e==\"function\"||e===w||e===H||Le||e===v||e===A||e===L||Ae||e===Ee||Se||Pe||je||typeof e==\"object\"&&e!==null&&(e.$$typeof===F||e.$$typeof===E||e.$$typeof===X||e.$$typeof===K||e.$$typeof===I||e.$$typeof===Z||e.getModuleId!==void 0))}function Ve(e,a,r){var i=e.displayName;if(i)return i;var s=a.displayName||a.name||\"\";return s!==\"\"?r+\"(\"+s+\")\":r}function Q(e){return e.displayName||\"Context\"}function _(e){if(e==null)return null;if(typeof e.tag==\"number\"&&f(\"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"),typeof e==\"function\")return e.displayName||e.name||null;if(typeof e==\"string\")return e;switch(e){case w:return\"Fragment\";case p:return\"Portal\";case H:return\"Profiler\";case v:return\"StrictMode\";case A:return\"Suspense\";case L:return\"SuspenseList\"}if(typeof e==\"object\")switch(e.$$typeof){case K:var a=e;return Q(a)+\".Consumer\";case X:var r=e;return Q(r._context)+\".Provider\";case I:return Ve(e,e.render,\"ForwardRef\");case E:var i=e.displayName||null;return i!==null?i:_(e.type)||\"Memo\";case F:{var s=e,u=s._payload,l=s._init;try{return _(l(u))}catch{return null}}}return null}var y=Object.assign,C=0,ee,ne,te,ae,re,ie,oe;function le(){}le.__reactDisabledLog=!0;function Me(){{if(C===0){ee=console.log,ne=console.info,te=console.warn,ae=console.error,re=console.group,ie=console.groupCollapsed,oe=console.groupEnd;var e={configurable:!0,enumerable:!0,value:le,writable:!0};Object.defineProperties(console,{info:e,log:e,warn:e,error:e,group:e,groupCollapsed:e,groupEnd:e})}C++}}function We(){{if(C--,C===0){var e={configurable:!0,enumerable:!0,writable:!0};Object.defineProperties(console,{log:y({},e,{value:ee}),info:y({},e,{value:ne}),warn:y({},e,{value:te}),error:y({},e,{value:ae}),group:y({},e,{value:re}),groupCollapsed:y({},e,{value:ie}),groupEnd:y({},e,{value:oe})})}C<0&&f(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\")}}var V=N.ReactCurrentDispatcher,M;function T(e,a,r){{if(M===void 0)try{throw Error()}catch(s){var i=s.stack.trim().match(/\\n( *(at )?)/);M=i&&i[1]||\"\"}return`\n`+M+e}}var W=!1,R;{var Ge=typeof WeakMap==\"function\"?WeakMap:Map;R=new Ge}function se(e,a){if(!e||W)return\"\";{var r=R.get(e);if(r!==void 0)return r}var i;W=!0;var s=Error.prepareStackTrace;Error.prepareStackTrace=void 0;var u;u=V.current,V.current=null,Me();try{if(a){var l=function(){throw Error()};if(Object.defineProperty(l.prototype,\"props\",{set:function(){throw Error()}}),typeof Reflect==\"object\"&&Reflect.construct){try{Reflect.construct(l,[])}catch(g){i=g}Reflect.construct(e,[],l)}else{try{l.call()}catch(g){i=g}e.call(l.prototype)}}else{try{throw Error()}catch(g){i=g}e()}}catch(g){if(g&&i&&typeof g.stack==\"string\"){for(var o=g.stack.split(`\n`),m=i.stack.split(`\n`),b=o.length-1,c=m.length-1;b>=1&&c>=0&&o[b]!==m[c];)c--;for(;b>=1&&c>=0;b--,c--)if(o[b]!==m[c]){if(b!==1||c!==1)do if(b--,c--,c<0||o[b]!==m[c]){var h=`\n`+o[b].replace(\" at new \",\" at \");return e.displayName&&h.includes(\"<anonymous>\")&&(h=h.replace(\"<anonymous>\",e.displayName)),typeof e==\"function\"&&R.set(e,h),h}while(b>=1&&c>=0);break}}}finally{W=!1,V.current=u,We(),Error.prepareStackTrace=s}var k=e?e.displayName||e.name:\"\",we=k?T(k):\"\";return typeof e==\"function\"&&R.set(e,we),we}function Ye(e,a,r){return se(e,!1)}function $e(e){var a=e.prototype;return!!(a&&a.isReactComponent)}function O(e,a,r){if(e==null)return\"\";if(typeof e==\"function\")return se(e,$e(e));if(typeof e==\"string\")return T(e);switch(e){case A:return T(\"Suspense\");case L:return T(\"SuspenseList\")}if(typeof e==\"object\")switch(e.$$typeof){case I:return Ye(e.render);case E:return O(e.type,a,r);case F:{var i=e,s=i._payload,u=i._init;try{return O(u(s),a,r)}catch{}}}return\"\"}var S=Object.prototype.hasOwnProperty,ue={},de=N.ReactDebugCurrentFrame;function P(e){if(e){var a=e._owner,r=O(e.type,e._source,a?a.type:null);de.setExtraStackFrame(r)}else de.setExtraStackFrame(null)}function Be(e,a,r,i,s){{var u=Function.call.bind(S);for(var l in e)if(u(e,l)){var o=void 0;try{if(typeof e[l]!=\"function\"){var m=Error((i||\"React class\")+\": \"+r+\" type `\"+l+\"` is invalid; it must be a function, usually from the `prop-types` package, but received `\"+typeof e[l]+\"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");throw m.name=\"Invariant Violation\",m}o=e[l](a,l,i,r,null,\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\")}catch(b){o=b}o&&!(o instanceof Error)&&(P(s),f(\"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).\",i||\"React class\",r,l,typeof o),P(null)),o instanceof Error&&!(o.message in ue)&&(ue[o.message]=!0,P(s),f(\"Failed %s type: %s\",r,o.message),P(null))}}}var Ue=Array.isArray;function G(e){return Ue(e)}function ze(e){{var a=typeof Symbol==\"function\"&&Symbol.toStringTag,r=a&&e[Symbol.toStringTag]||e.constructor.name||\"Object\";return r}}function qe(e){try{return be(e),!1}catch{return!0}}function be(e){return\"\"+e}function ce(e){if(qe(e))return f(\"The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.\",ze(e)),be(e)}var D=N.ReactCurrentOwner,He={key:!0,ref:!0,__self:!0,__source:!0},fe,me,Y;Y={};function Xe(e){if(S.call(e,\"ref\")){var a=Object.getOwnPropertyDescriptor(e,\"ref\").get;if(a&&a.isReactWarning)return!1}return e.ref!==void 0}function Ke(e){if(S.call(e,\"key\")){var a=Object.getOwnPropertyDescriptor(e,\"key\").get;if(a&&a.isReactWarning)return!1}return e.key!==void 0}function Je(e,a){if(typeof e.ref==\"string\"&&D.current&&a&&D.current.stateNode!==a){var r=_(D.current.type);Y[r]||(f('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref',_(D.current.type),e.ref),Y[r]=!0)}}function Ze(e,a){{var r=function(){fe||(fe=!0,f(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",a))};r.isReactWarning=!0,Object.defineProperty(e,\"key\",{get:r,configurable:!0})}}function Qe(e,a){{var r=function(){me||(me=!0,f(\"%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",a))};r.isReactWarning=!0,Object.defineProperty(e,\"ref\",{get:r,configurable:!0})}}var en=function(e,a,r,i,s,u,l){var o={$$typeof:n,type:e,key:a,ref:r,props:l,_owner:u};return o._store={},Object.defineProperty(o._store,\"validated\",{configurable:!1,enumerable:!1,writable:!0,value:!1}),Object.defineProperty(o,\"_self\",{configurable:!1,enumerable:!1,writable:!1,value:i}),Object.defineProperty(o,\"_source\",{configurable:!1,enumerable:!1,writable:!1,value:s}),Object.freeze&&(Object.freeze(o.props),Object.freeze(o)),o};function nn(e,a,r,i,s){{var u,l={},o=null,m=null;r!==void 0&&(ce(r),o=\"\"+r),Ke(a)&&(ce(a.key),o=\"\"+a.key),Xe(a)&&(m=a.ref,Je(a,s));for(u in a)S.call(a,u)&&!He.hasOwnProperty(u)&&(l[u]=a[u]);if(e&&e.defaultProps){var b=e.defaultProps;for(u in b)l[u]===void 0&&(l[u]=b[u])}if(o||m){var c=typeof e==\"function\"?e.displayName||e.name||\"Unknown\":e;o&&Ze(l,c),m&&Qe(l,c)}return en(e,o,m,s,i,D.current,l)}}var $=N.ReactCurrentOwner,he=N.ReactDebugCurrentFrame;function x(e){if(e){var a=e._owner,r=O(e.type,e._source,a?a.type:null);he.setExtraStackFrame(r)}else he.setExtraStackFrame(null)}var B;B=!1;function U(e){return typeof e==\"object\"&&e!==null&&e.$$typeof===n}function pe(){{if($.current){var e=_($.current.type);if(e)return`\n\nCheck the render method of \\``+e+\"`.\"}return\"\"}}function tn(e){{if(e!==void 0){var a=e.fileName.replace(/^.*[\\\\\\/]/,\"\"),r=e.lineNumber;return`\n\nCheck your code at `+a+\":\"+r+\".\"}return\"\"}}var _e={};function an(e){{var a=pe();if(!a){var r=typeof e==\"string\"?e:e.displayName||e.name;r&&(a=`\n\nCheck the top-level render call using <`+r+\">.\")}return a}}function ge(e,a){{if(!e._store||e._store.validated||e.key!=null)return;e._store.validated=!0;var r=an(a);if(_e[r])return;_e[r]=!0;var i=\"\";e&&e._owner&&e._owner!==$.current&&(i=\" It was passed a child from \"+_(e._owner.type)+\".\"),x(e),f('Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.',r,i),x(null)}}function ve(e,a){{if(typeof e!=\"object\")return;if(G(e))for(var r=0;r<e.length;r++){var i=e[r];U(i)&&ge(i,a)}else if(U(e))e._store&&(e._store.validated=!0);else if(e){var s=Re(e);if(typeof s==\"function\"&&s!==e.entries)for(var u=s.call(e),l;!(l=u.next()).done;)U(l.value)&&ge(l.value,a)}}}function rn(e){{var a=e.type;if(a==null||typeof a==\"string\")return;var r;if(typeof a==\"function\")r=a.propTypes;else if(typeof a==\"object\"&&(a.$$typeof===I||a.$$typeof===E))r=a.propTypes;else return;if(r){var i=_(a);Be(r,e.props,\"prop\",i,e)}else if(a.PropTypes!==void 0&&!B){B=!0;var s=_(a);f(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\",s||\"Unknown\")}typeof a.getDefaultProps==\"function\"&&!a.getDefaultProps.isReactClassApproved&&f(\"getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\")}}function on(e){{for(var a=Object.keys(e.props),r=0;r<a.length;r++){var i=a[r];if(i!==\"children\"&&i!==\"key\"){x(e),f(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\",i),x(null);break}}e.ref!==null&&(x(e),f(\"Invalid attribute `ref` supplied to `React.Fragment`.\"),x(null))}}function ln(e,a,r,i,s,u){{var l=Fe(e);if(!l){var o=\"\";(e===void 0||typeof e==\"object\"&&e!==null&&Object.keys(e).length===0)&&(o+=\" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\");var m=tn(s);m?o+=m:o+=pe();var b;e===null?b=\"null\":G(e)?b=\"array\":e!==void 0&&e.$$typeof===n?(b=\"<\"+(_(e.type)||\"Unknown\")+\" />\",o=\" Did you accidentally export a JSX literal instead of a component?\"):b=typeof e,f(\"React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\",b,o)}var c=nn(e,a,r,s,u);if(c==null)return c;if(l){var h=a.children;if(h!==void 0)if(i)if(G(h)){for(var k=0;k<h.length;k++)ve(h[k],e);Object.freeze&&Object.freeze(h)}else f(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\");else ve(h,e)}return e===w?on(c):rn(c),c}}var sn=ln;q.Fragment=w,q.jsxDEV=sn})()});var De=z((kn,Ce)=>{\"use strict\";Ce.exports=ke()});var wn={};mn(wn,{default:()=>vn,frontmatter:()=>_n});var t=hn(De()),_n={title:\"Vulkan Port Update 1\",description:\"How to port an OpenGL game engine to Vulkan\",date:\"Sunday, January 24, 2025\",author:\"antopilo\",img:\"https://cdn.antopilo.dev/blogPreviews/vulkan-port-banner.png\",published:!0,index:6};function Ie(d){let n=Object.assign({h1:\"h1\",a:\"a\",span:\"span\",p:\"p\",h2:\"h2\",ul:\"ul\",li:\"li\",h3:\"h3\",img:\"img\"},d.components);return(0,t.jsxDEV)(t.Fragment,{children:[(0,t.jsxDEV)(n.h1,{id:\"mental-aspect\",children:[(0,t.jsxDEV)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#mental-aspect\",children:(0,t.jsxDEV)(n.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\"},this)},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\"},this),\"Mental aspect\"]},void 0,!0,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:11,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"I\\u2019ve been thinking about this port for a few years and every time I thought about it, I started having cold sweats over the amount of work it would entail. When I say work, I don\\u2019t just mean the programming, but also the mental effort. Seeing a project you\\u2019ve worked on for five years reduced from a full-fledged editor to a blank screen is daunting. The fear of the unknown, not knowing if your architecture is compatible or even if you have the capacity of completing that work. So I waited and let the idea simmer until I felt unfazed by the idea and just accepted that it needed to be done. That\\u2019s when you know you are ready.\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:13,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.h1,{id:\"being-ready\",children:[(0,t.jsxDEV)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#being-ready\",children:(0,t.jsxDEV)(n.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\"},this)},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\"},this),\"Being ready\"]},void 0,!0,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:15,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"Every time I publish a new blog post, I feel good and proud. In a way, these updates are like finishing a sprint; they represent a development cycle for me. It gives me a moment to rest and recharge before diving back into the work.\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:17,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"The last update was the biggest so far, and I even left many things out of the article because it was simply too big. I figured it was a nice time to release it as the holidays were coming up and I needed some time to recharge my batteries a little bit. I spent time with my family, focused on myself and made sure I started the year right.\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:19,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"I felt refreshed and I started reading up Vulkan. I was mentally ready to port the biggest codebase I had.\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:21,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.h1,{id:\"renovation\",children:[(0,t.jsxDEV)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#renovation\",children:(0,t.jsxDEV)(n.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\"},this)},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\"},this),\"Renovation\"]},void 0,!0,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:23,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"A good analogy for this type of work is renovation. If you think of your codebase as a house, the structure of the building represents your game engine, while the renderer is like the interior design and aesthetics. Then it becomes pretty straightforward to see what\\u2019s ahead of you.\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:25,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"OpenGL and Vulkan have very little in common, so I decided not to support both at the same time. It was going to be a complete departure from OpenGL\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:27,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.h2,{id:\"the-teardown\",children:[(0,t.jsxDEV)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#the-teardown\",children:(0,t.jsxDEV)(n.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\"},this)},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\"},this),\"The Teardown\"]},void 0,!0,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:29,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"The first step in renovating your kitchen is to strip everything down to the bare structure\\u2014until all that\\u2019s left is the structure.\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:31,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"Similarly, the first step in this port was to remove all the existing rendering code. Every piece of code that relied on OpenGL had to be commented out or removed entirely. I had GL calls in many places I shouldn\\u2019t have and this was eye opening. It made me realize that this was a much needed change. OpenGL calls were spread out everywhere.\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:33,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"It was also a good trip down memory lane, revisiting code I hadn\\u2019t touched in years. All in all, it took around an evening to get to a headless version of Nuake. This process also confirmed that a headless Nuake is possible, which will be useful for dedicated servers down the line.\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:35,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"At this point, the kitchen is fully stripped down. The engine is loading up, and all we have is a command line terminal. This is the scariest point. All your work is\\u2026. gone. But if you change your mindset a little, you see the potential of your new renovated kitchen! Blank slate, baby! \\u{1F483}\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:37,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.h2,{id:\"planification\",children:[(0,t.jsxDEV)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#planification\",children:(0,t.jsxDEV)(n.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\"},this)},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\"},this),\"Planification\"]},void 0,!0,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:39,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"The planning was done beforehand and I knew generally what I wanted to use for the renderer. Admittedly, my knowledge of Vulkan at the time was very minimal. I was starting from scratch except for some resources, libraries & previous failed attempts.\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:41,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"Here is what I decided on using:\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:43,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.ul,{children:[`\n`,(0,t.jsxDEV)(n.li,{children:\"VkGuide 2.0 (great guide)\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:45,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.li,{children:\"VMA for memory allocation\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:46,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.li,{children:\"VkBootstrap for context initialization\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:47,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.li,{children:\"DXC for HLSL support\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:48,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.li,{children:\"Volk for loading Vulkan function pointers\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:49,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:45,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"As stated previously, there was also a lot of mental preparation before hand. It\\u2019s important to take you your take to really learn what you are doing rather than fall in the copy-paste trap. This is a mistake that a lot of beginners do when getting into graphics programming and they miss out on important knowledge that will eventually catch up to them.\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:51,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"It\\u2019s also important to have a real purpose of understanding the process. If you are too focused on getting to the finish line, you will not get there. You have to be present mentally at every step of the way. Don\\u2019t expect to run if you can\\u2019t walk!\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:53,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.h2,{id:\"preparation\",children:[(0,t.jsxDEV)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#preparation\",children:(0,t.jsxDEV)(n.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\"},this)},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\"},this),\"Preparation\"]},void 0,!0,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:55,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"Now that everything was in place, it was time to lay down the foundation for the renderer. This means setting up everything we needed to get started on the renderer.\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:57,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.ul,{children:[`\n`,(0,t.jsxDEV)(n.li,{children:\"Creating the window\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:59,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.li,{children:\"Creating the swap chain\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:60,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.li,{children:\"Our first pipeline\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:61,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.li,{children:\"Clear color\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:62,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.li,{children:\"Rendering imgui\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:63,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.li,{children:\"Displaying the imgui demo window\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:64,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.li,{children:\"Displaying our editor\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:65,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.li,{children:\"Fixing textures & fonts\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:66,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.li,{children:\"Rendering our first triangle to a texture\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:67,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.li,{children:\"Displaying that texture in the viewport panel\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:68,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:59,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.h2,{id:\"execution\",children:[(0,t.jsxDEV)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#execution\",children:(0,t.jsxDEV)(n.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\"},this)},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\"},this),\"Execution\"]},void 0,!0,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:70,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:`This next section is an abridged version of the actual process, skipping over some bugs and head scratching. It will also most probably give the impression that everything went very smooth(It certainly wasn\\u2019t!).\\r\nThis process was largely learning how to use the validation layer, understanding new concepts I wasn\\u2019t familiar and most importantly producing some god awful code.`},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:72,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"But that\\u2019s perfectly okay, you have to be easy on yourself when learning new concepts. You can\\u2019t expect to write perfect code and understanding everything right away.\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:75,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"My mantra has always been to get it working first, then refined afterwards. Every time I\\u2019ve tried abstracting something while implementing it, I end up missing something I didn\\u2019t account for and have to do even more work to account for that edge case.\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:77,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.h3,{id:\"the-editor\",children:[(0,t.jsxDEV)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#the-editor\",children:(0,t.jsxDEV)(n.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\"},this)},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\"},this),\"The Editor\"]},void 0,!0,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:79,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"The first step was setting up the window context, replacing everything previously done with OpenGL with a Vulkan context, and setting up the swap chain. While this wasn\\u2019t something particularly difficult,  it was something I hadn\\u2019t done before, as the swap chain was handled for me. Nonetheless, I got from nothing to a window with a clear color pretty smoothly.\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:81,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:(0,t.jsxDEV)(n.img,{src:\"https://cdn.antopilo.dev/images/vulkan1/window.png\",alt:\"Blank window\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:83,columnNumber:1},this)},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:83,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"Then I had to get my feet feet with the pipeline system. The easiest one to set up is a compute pipeline as it only has one stage and has less boilerplate code. This was a great way to get introduced to those new concepts as it allows you to render to a texture a lot faster.\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:85,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[(0,t.jsxDEV)(n.img,{src:\"https://cdn.antopilo.dev/images/vulkan1/compute.png\",alt:\"\",title:\"Compute shader\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:87,columnNumber:1},this),`\\r\nSetting up ImGUI`]},void 0,!0,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:87,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"After setting up ImGui to use the vulkan back-end instead of the OpenGL one, I followed VkGuide and was able to render the ImGui demo window. This might not seem like a lot, but now technically all I had to do was draw my editor in that same \\u201Centry point\\u201D.\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:90,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"It was almost that simple, but remember what I said earlier? I had OpenGL code spread out throughout my ImGui code. Mainly for rendering thumbnails and previews. So I commented these out and behold:\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:92,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[(0,t.jsxDEV)(n.img,{src:\"https://cdn.antopilo.dev/images/vulkan1/launcher.png\",alt:\"Broken launcher\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:94,columnNumber:1},this),`\\r\nOkay, now let\\u2019s try loading a project just for fun.`]},void 0,!0,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:94,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:(0,t.jsxDEV)(n.img,{src:\"https://cdn.antopilo.dev/images/vulkan1/broken-editor.png\",alt:\"\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:97,columnNumber:1},this)},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:97,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:`Whew, there\\u2019s a lot going wrong here, but nonetheless, this was a huuuuge step forward.\\r\nEver wondered what Nuake looks like without the pretty make-up? Well here it is. No docking, no custom font, no images, no custom title bar, just plain, raw imgui. At that point, I felt a little bit more confident to port this thing.`},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:99,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"The reason the font atlas is plastered all over the screen is because when imgui receives an invalid descriptor set to draw an image(equivalent of texture ID with OpenGL) it will render the first texture it has, which is the font atlas.\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:102,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.h3,{id:\"fixing-things-up\",children:[(0,t.jsxDEV)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#fixing-things-up\",children:(0,t.jsxDEV)(n.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\"},this)},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\"},this),\"Fixing things up\"]},void 0,!0,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:104,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"The first thing I did was figuring out how to make a descriptor set for ImGui. After that, all I had to do was use my compute shader\\u2019s color attachment and display it in the viewport, rather than copying it directly to the swap chain. Oh and also fixing the docking. With little work, this is what the editor looked like.\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:106,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:(0,t.jsxDEV)(n.img,{src:\"https://cdn.antopilo.dev/images/vulkan1/editor-viewport.png\",alt:\"\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:108,columnNumber:1},this)},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:108,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"Again, a huge step forward! We are finally starting to look like a proper editor and not some kind of migraine simulator.\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:110,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.h3,{id:\"hello-triangle\",children:[(0,t.jsxDEV)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#hello-triangle\",children:(0,t.jsxDEV)(n.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\"},this)},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\"},this),\"Hello Triangle\"]},void 0,!0,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:112,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"I was getting a little impatient there and decided it was time to draw my first triangle and learn about the graphics pipeline. At that point, I had almost no abstraction over Vulkan and it was all raw code. It was still manageable, but I could feel the codebase getting messier and messier. Nonetheless, I didn't trust myself enough to start abstracting. After all, I hadn\\u2019t even rendered a single triangle yet.\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:114,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:(0,t.jsxDEV)(n.img,{src:\"https://cdn.antopilo.dev/images/vulkan1/triangle.png\",alt:\"\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:116,columnNumber:1},this)},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:116,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"Now that I had a vertex buffer, a vertex shader, and a fragment shader. I went ahead and decided to make a new VkMesh class that would replace my original OpenGL Mesh object. The Mesh class was used in a lot of places in the game engine. So instead of just replacing it, I took a composition approach and adding a VkMesh in the Meshclass. This isn't ideal, but it\\u2019s a temporary solution. I\\u2019ll refactor it later to use a resource handle.\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:118,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"With almost no changes to the codebase, I was able to load all the meshes in a scene and render them to my render target. I also added a buffer to store the camera's view/projection matrix. For now, everything is rendered at the world origin.\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:120,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:(0,t.jsxDEV)(n.img,{src:\"https://cdn.antopilo.dev/images/vulkan1/editor3d.png\",alt:\"\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:122,columnNumber:1},this)},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:122,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[`At this point, it had only been around three days since I started the port, and this was a huge confidence boost. I knew I could do it. With a bit more work, I created a buffer to hold my model matrices. By using a push constant index, I could look up the correct transform in that buffer directly from my vertex shader.\\r\n`,(0,t.jsxDEV)(n.img,{src:\"https://cdn.antopilo.dev/images/vulkan1/transforms.png\",alt:\"\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:125,columnNumber:1},this)]},void 0,!0,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:124,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"Little did I know, this was my first introduction to the bindless methodology\\u2014bind once, then index into the buffer. This approach significantly reduces the amount of binding required and makes dealing with descriptors much easier.\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:127,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.h3,{id:\"title-bar-icons--images\",children:[(0,t.jsxDEV)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#title-bar-icons--images\",children:(0,t.jsxDEV)(n.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\"},this)},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\"},this),\"Title bar, icons & images\"]},void 0,!0,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:129,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"I wanted the sexy editor back, so I focused on the finishing touches like custom fonts, icons, and images. I also enabled the custom title bar at the same time.\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:131,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:(0,t.jsxDEV)(n.img,{src:\"https://cdn.antopilo.dev/images/vulkan1/fixed-editor.png\",alt:\"\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:133,columnNumber:1},this)},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:133,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"This felt really good. The editor was in a healthy state, and I had a render target. Now, it was time to dive into the real work: the scene renderer.\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:135,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.h1,{id:\"closing-words\",children:[(0,t.jsxDEV)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#closing-words\",children:(0,t.jsxDEV)(n.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\"},this)},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\"},this),\"Closing words\"]},void 0,!0,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:137,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:`The goal of these updates isn't to show you how to build a renderer\\u2014mine is far from the best or a perfect example. I simply enjoy making cool stuff, and I'm working on this project in my free time.\\r\nMy goal is more to give you an insight of what\\u2019s the process of porting a five-year-old codebase, with hundreds of thousands (maybe a million a this point) of lines of code, from OpenGL to Vulkan.`},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:139,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"I remember trying to read about other people's experiences with this task, but very few shared it on a personal level\\u2014most were focused on the higher level, technical side. The mental aspect of programming is crucial, especially when it comes to long-term projects. Don\\u2019t forget: it\\u2019s a marathon, not a sprint!\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:142,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.h1,{id:\"on-the-menu-next-update\",children:[(0,t.jsxDEV)(n.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#on-the-menu-next-update\",children:(0,t.jsxDEV)(n.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\"},this)},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\"},this),\"On the menu next update\"]},void 0,!0,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:144,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"I learned from the last update and won't be making a massive blog post covering everything. As it gets harder and harder to keep up with. I will end this blog post here as Part 1. The next update will dive into the progress I've made on the scene renderer (more than expected!) and will go much deeper. I will be talking about bindless, render pass abstraction, shading, and of course architecture.\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:146,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"See you in the next update!\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:148,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"Antoine\"},void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:150,columnNumber:1},this)]},void 0,!0,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\",lineNumber:1,columnNumber:1},this)}function gn(d={}){let{wrapper:n}=d.components||{};return n?(0,t.jsxDEV)(n,Object.assign({},d,{children:(0,t.jsxDEV)(Ie,d,void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\"},this)}),void 0,!1,{fileName:\"C:\\\\Dev\\\\nuake-website\\\\content\\\\blog-source\\\\_mdx_bundler_entry_point-b2b947ea-20c6-46e4-bae3-b4fb8da37a80.mdx\"},this):Ie(d)}var vn=gn;return pn(wn);})();\n/*! Bundled license information:\n\nreact/cjs/react-jsx-dev-runtime.development.js:\n  (**\n   * @license React\n   * react-jsx-dev-runtime.development.js\n   *\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *)\n*/\n;return Component;"
  },
  "_id": "blog-source/vulkan1.mdx",
  "_raw": {
    "sourceFilePath": "blog-source/vulkan1.mdx",
    "sourceFileName": "vulkan1.mdx",
    "sourceFileDir": "blog-source",
    "contentType": "mdx",
    "flattenedPath": "blog-source/vulkan1"
  },
  "type": "Doc",
  "slug": "/blog-source/vulkan1",
  "slugAsParams": "vulkan1"
}